<launch>

  <arg name="agent"        default="scarab40"/>
  <arg name="ground_truth" default="true"/> <!-- publish ground truth tf tree -->

  <!-- robot spawn args -->
  <arg name="spawn_x" default="0.0"/>
  <arg name="spawn_y" default="0.0"/>
  <arg name="spawn_z" default="1.0"/>
  <arg name="camera"  default="true"/> <!-- enable simulated kinect in gazebo -->
  <arg name="hokuyo"  default="true"/> <!-- enable simulated hokuyo in gazebo -->

  <!-- gmapping args -->
  <arg name="map_xmin" default="-50.0"/>
  <arg name="map_xmax" default="50.0"/>
  <arg name="map_ymin" default="-50.0"/>
  <arg name="map_ymax" default="50.0"/>
  <arg name="delta"    default="0.05"/>

  <!-- tf args -->
  <arg name="base_frame"    default="$(arg agent)/base_footprint" />
  <arg name="odom_frame"    default="$(arg agent)/odom" />
  <arg name="map_frame"     default="$(arg agent)/map" />
  <arg name="world_frame"   default="world"/>
  <arg name="publish_world" default="true"/>

  <group ns="$(arg agent)">

    <!-- static transform between world_frame and map_frame -->
    <node pkg="tf2_ros"
          type="static_transform_publisher"
          name="world_static_tf_broadcaster"
          args="0 0 0 0 0 0 $(arg world_frame) $(arg map_frame)"
          if="$(arg publish_world)"/>

    <!-- static transform between odom_frame and ground truth odom frame published
         by gazebo -->
    <node pkg="tf2_ros"
          type="static_transform_publisher"
          name="odom_static_tf_broadcaster"
          args="0 0 0 0 0 0 $(arg odom_frame) $(arg agent)/ground_truth/odom"
          if="$(arg ground_truth)"/>

    <!-- static transform between ground truth base link frame published by gazebo
         and base_frame -->
    <node pkg="tf2_ros"
          type="static_transform_publisher"
          name="base_static_tf_broadcaster"
          args="0 0 0 0 0 0 $(arg agent)/ground_truth/base_link $(arg base_frame)"
          if="$(arg ground_truth)"/>

    <!-- load robot urdf to param -->
    <param name="robot_description"
           command="$(find xacro)/xacro $(find scarab_description)/urdf/scarab.xacro
                    tf_prefix:=$(arg agent) camera:=$(arg camera) hokuyo:=$(arg hokuyo)" />

    <!-- spawn robot in gazebo -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-urdf -model $(arg agent) -param /$(arg agent)/robot_description
                -x $(arg spawn_x) -y $(arg spawn_y) -z $(arg spawn_z)"/>

    <!-- publish gazebo model joint states to tf -->
    <node name="robot_state_publisher"
          pkg="robot_state_publisher"
          type="robot_state_publisher"/>
    <node name="joint_state_publisher"
          pkg="joint_state_publisher"
          type="joint_state_publisher"/>

    <!-- ground truth pose -->
    <node name="pose_stamped" pkg="hfn" type="tf_posestamped_node.py" >
      <param name="base_frame_id" value="$(arg base_frame)" />
      <param name="map_frame_id"  value="$(arg map_frame)" />
    </node>

    <!-- convert rviz goal msg to action -->
    <node name="goal_to_action" pkg="hfn" type="goal_to_action.py">
      <remap from="goal" to="move_base_simple/goal"/>
    </node>

    <!-- navigation via hfn -->
    <node name="hfn_navigation" pkg="hfn" type="hfn" output="screen">
      <remap from="odom" to="ground_truth/odom"/>
      <param name="base_frame_id"      value="$(arg base_frame)"/>
      <param name="map_frame_id"       value="$(arg map_frame)" />
      <param name="cost_occ_prob"      value="0.7" />
      <param name="cost_occ_dist"      value="0.7" />
      <param name="max_occ_dist"       value="1.0" />
      <param name="lethal_occ_dist"    value="0.2" />
      <param name="axle_width"         value="0.255" />
      <param name="robot_radius"       value="0.3" />
      <param name="safety_margin"      value="0.1" />
      <param name="social_margin"      value="0.2" />
      <param name="goal_tolerance_ang" value=".05"/> <!--default 2pi-->
      <param name="goal_tolerance"     value=".05"/> <!--default .2m-->
      <param name="traj_mode"          value="1"/> <!--default 0 is original , 1 is constant acc, 2 is min jerk-->
      <param name="max_speed"          value="0.22"/> <!--default 0.5m/s-->
      <param name="max_acc"            value="0.3"/> <!--default 0.5m/s^2-->
      <param name="agent"              value="$(arg agent)"/>
    </node>

    <!-- slam for localization -->
    <node pkg="gmapping" type="slam_gmapping" name="gmapping" output="screen">
      <remap from="map_metadata" to="map_metadata"/>

      <param name="base_frame" value="$(arg base_frame)" />
      <param name="odom_frame" value="$(arg odom_frame)"/>
      <param name="map_frame"  value="$(arg map_frame)" />
      <param name="xmin"       value="$(arg map_xmin)"/>
      <param name="xmax"       value="$(arg map_xmax)"/>
      <param name="ymin"       value="$(arg map_ymin)"/>
      <param name="ymax"       value="$(arg map_ymax)"/>
      <param name="delta"      value="$(arg delta)"/>
    </node>

  </group>

</launch>
